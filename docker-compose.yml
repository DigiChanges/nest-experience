
services:
#  node:
#    container_name: experience_node_1
#    restart: always
#    tty: false
#    stdin_open: false
#    build:
#      context: .
#      dockerfile: Dockerfile
#      target: dev
#    ports:
#      - "8089:8089"
#      - "9229:9229"
#    volumes:
#      - ./dist:/home/node/dist
#      - ./src:/home/node/src
#      - ./config:/home/node/config
#      - ./.env:/home/node/.env
#    networks:
#      - experiencenet

  db:
    container_name: experience_db_1
    restart: always
    build:
      context: docker/mongo/
      dockerfile: Dockerfile
    ports:
      - "27018:27017"
    environment:
      MONGODB_ROOT_PASSWORD: 123456
      MONGODB_USERNAME: experience
      MONGODB_PASSWORD: experience
      MONGODB_DATABASE: experience
    volumes:
      - data:/bitnami/mongodb
    networks:
      - experiencenet

  minio:
    container_name: experience_minio_1
    restart: always
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    labels:
      - traefik.http.routers.api.rule=Host(`minio.domain.com`)
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=lets-encrypt
      - traefik.port=80
    networks:
      - experiencenet
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: 12345678
      MINIO_DOMAIN: localhost
    volumes:
      - minio:/data
    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data

  mail:
    container_name: experience_mail_1
    restart: always
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - experiencenet

  cache:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    restart: always
    ulimits:
      memlock: -1
    container_name: experience_cache_1
    ports:
      - "6380:6379"
    environment:
      - DRAGONFLY_USER=experience
      - DRAGONFLY_PASSWORD=ewsua132435
      - DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    networks:
      - experiencenet
    volumes:
      - cache:/data

networks:
  experiencenet:
    driver: "bridge"

volumes:
  data:
    driver: "local"
  cache:
    driver: "local"
  minio:
    driver: "local"

